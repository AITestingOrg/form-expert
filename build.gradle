buildscript {
	ext {
		springBootVersion = '2.1.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

group = 'org.aist'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	springCloudVersion = 'Finchley.BUILD-SNAPSHOT'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	compile('com.smartystreets.api:smartystreets-java-sdk:1.0.4')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile 'pl.pragmatists:JUnitParams:1.1.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

checkstyle {
	toolVersion = "8.7"
	configFile = new File(rootDir, "checkstyle.xml")
	maxWarnings = 0
	maxErrors = 0
}

checkstyleMain {
	source = fileTree('src/main') {
		excludes = ['*.yml']
	}
}

checkstyleTest {
	source = fileTree('src/test') {
		excludes = ['*.yml']
	}
}

jacocoTestReport {
	reports {
		html.destination file("${buildDir}/reports/jacoco")
	}
}

jacocoTestCoverageVerification {
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: "${buildDir}/classes/java/main",
					exclude: ['**/models/**'])
		})
	}
	violationRules {
		rule {
			limit {
				minimum = 0.8
			}
		}
	}
}
test {
	jacoco {
		excludes = ['**/models/**']
	}
}

test.finalizedBy(jacocoTestCoverageVerification)

